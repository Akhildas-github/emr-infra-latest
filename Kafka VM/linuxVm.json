{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string"
      },
      "networkInterfaceName": {
        "type": "string"
      },
      "enableAcceleratedNetworking": {
        "type": "bool"
      },
      "networkSecurityGroupName": {
        "type": "string"
      },
      "networkSecurityGroupRules": {
        "type": "array"
      },
      "subnetName": {
        "type": "string"
      },
      "virtualNetworkName": {
        "type": "string"
      },
      "publicIpAddressName": {
        "type": "string"
      },
      "publicIpAddressType": {
        "type": "string"
      },
      "publicIpAddressSku": {
        "type": "string"
      },
      "pipDeleteOption": {
        "type": "string"
      },
      "virtualMachineName": {
        "type": "string"
      },
      "virtualMachineComputerName": {
        "type": "string"
      },
      "osDiskType": {
        "type": "string"
      },
      "osDiskDeleteOption": {
        "type": "string"
      },
      "virtualMachineSize": {
        "type": "string"
      },
      "nicDeleteOption": {
        "type": "string"
      },
      "adminUsername": {
        "type": "string"
      },
      "adminPassword": {
        "type": "string"
      },
      "securityType": {
        "type": "string"
      },
      "secureBoot": {
        "type": "bool"
      },
      "vTPM": {
        "type": "bool"
      },
      "diskSizeInGB": {
        "type": "int"
      },
      "kafkaVMDataDisk1": {
        "type": "string"
      }
    },
    "variables": {
      "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
      "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "vnetName": "[last(split(variables('vnetId'), '/'))]",
      "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
      {
        "name": "[parameters('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2022-11-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]",
                  "properties": {
                    "deleteOption": "[parameters('pipDeleteOption')]"
                  }
                }
              }
            }
          ],
          "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
          "networkSecurityGroup": {
            "id": "[variables('nsgId')]"
          }
        }
      },
      {
        "name": "[parameters('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-02-01",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": "[parameters('networkSecurityGroupRules')]"
        }
      },
      {
        "name": "[parameters('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2020-08-01",
        "location": "[parameters('location')]",
        "properties": {
          "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
        },
        "sku": {
          "name": "[parameters('publicIpAddressSku')]"
        }
      },
      {
        "type": "Microsoft.Compute/disks",
        "apiVersion": "2023-01-02",
        "name": "[parameters('kafkaVMDataDisk1')]",
        "location": "eastus",
        "sku": {
          "name": "StandardSSD_LRS",
          "tier": "Standard"
        },
        "properties": {
          "creationData": {
            "createOption": "Empty"
          },
          "diskSizeGB": 256,
          "diskIOPSReadWrite": 500,
          "diskMBpsReadWrite": 60,
          "encryption": {
            "type": "EncryptionAtRestWithPlatformKey"
          },
          "networkAccessPolicy": "AllowAll",
          "publicNetworkAccess": "Enabled",
          "diskState": "Reserved"
        }
      },
      {
        "name": "[parameters('virtualMachineName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2022-03-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
          "[concat('Microsoft.Compute/disks/', parameters('kafkaVMDataDisk1'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('virtualMachineSize')]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('osDiskType')]"
              },
              "diskSizeGB": "[parameters('diskSizeInGB')]",
              "deleteOption": "[parameters('osDiskDeleteOption')]"
            },
            "dataDisks": [
              {
                "lun": 0,
                "name": "[parameters('kafkaVMDataDisk1')]",
                "createOption": "Attach",
                "caching": "ReadOnly",
                "writeAcceleratorEnabled": false,
                "managedDisk": {
                  "id": "[resourceId('Microsoft.Compute/disks', parameters('kafkaVMDataDisk1'))]"
                },
                "deleteOption": "Detach",
                "toBeDetached": false
              }
            ],
            "imageReference": {
              "publisher": "canonical",
              "offer": "0001-com-ubuntu-server-jammy",
              "sku": "22_04-lts-gen2",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
                "properties": {
                  "deleteOption": "[parameters('nicDeleteOption')]"
                }
              }
            ]
          },
          "osProfile": {
            "computerName": "[parameters('virtualMachineComputerName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": {
              "patchSettings": {
                "patchMode": "ImageDefault"
              }
            }
          },
          "securityProfile": {
            "securityType": "[parameters('securityType')]",
            "uefiSettings": {
              "secureBootEnabled": "[parameters('secureBoot')]",
              "vTpmEnabled": "[parameters('vTPM')]"
            }
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          }
        }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      }
    }
  }